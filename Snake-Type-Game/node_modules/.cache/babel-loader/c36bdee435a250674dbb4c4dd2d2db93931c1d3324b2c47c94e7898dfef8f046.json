{"ast":null,"code":"var _jsxFileName = \"/Users/patrickwellins/Desktop/Snake-Type-Game/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport _ from 'lodash';\nimport { ChevronUpIcon, ChevronDownIcon, ChevronLeftIcon, ChevronRightIcon, PlayIcon, PauseIcon } from \"@heroicons/react/20/solid\";\nimport { ArrowPathIcon, PlayPauseIcon } from \"@heroicons/react/24/outline\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst randomXY = (snake, gameContainerWidth, gameContainerHeight) => {\n  let goodSpot = true;\n  const randX = _.clamp(_.random(gameContainerWidth / 25) * 25, 25, gameContainerHeight - 25);\n  const randY = _.clamp(_.random(gameContainerHeight / 25) * 25, 25, gameContainerHeight - 25);\n  snake.segmentLocations.forEach(segment => {\n    if (_.isEqual([randX, randY], segment)) {\n      goodSpot = false;\n    }\n  });\n  return goodSpot ? [randX, randY] : randomXY(snake, gameContainerWidth, gameContainerHeight);\n};\nclass GameContainer {\n  constructor(width, height) {\n    this.width = width;\n    this.height = height;\n    this.wallCollision = false;\n    this.pause = true;\n  }\n  update(snake, apple, score, setScore) {\n    // If the game is not Paused then update\n    if (!this.pause) {\n      snake.update(apple, score, setScore);\n      // check of snake collided with wall\n      this.wallCollision = snake.segmentLocations[0][0] >= this.width || snake.segmentLocations[0][0] < 0 || snake.segmentLocations[0][1] >= this.height || snake.segmentLocations[0][1] < 0 ? true : false;\n      if (this.wallCollision) {\n        snake.resetSnake();\n        score.current = 0;\n        this.pause = true;\n      }\n    }\n    if (snake.crashed) {\n      snake.resetSnake();\n      score.current = 0;\n      this.pause = true;\n    }\n  }\n  stop() {\n    this.pause = true;\n  }\n  start() {\n    this.pause = false;\n  }\n}\nclass Snake {\n  constructor() {\n    this.segmentLocations = [[50, 50], [25, 50], [0, 50]];\n    this.head = this.segmentLocations[0];\n    this.direction = \"right\";\n    this.crashed = false;\n  }\n  ateApple(apple) {\n    const didEatApple = this.head[0] === apple.x && this.head[1] === apple.y;\n    if (didEatApple) {\n      const [x, y] = randomXY(snake, 400, 400);\n      apple.x = x;\n      apple.y = y;\n    }\n    return didEatApple;\n  }\n  resetSnake() {\n    this.segmentLocations = [[50, 50], [25, 50], [0, 50]];\n    this.head = this.segmentLocations[0];\n    this.direction = \"right\";\n    this.crashed = false;\n  }\n  checkIfCrashed() {\n    this.segmentLocations.slice(1).forEach(segment => {\n      if (_.isEqual(this.head, segment)) {\n        this.crashed = true;\n      }\n    });\n  }\n  update(apple, score) {\n    if (!this.crashed) {\n      let currentHead;\n      if (this.direction === \"right\") {\n        currentHead = [this.head[0] + 25, this.head[1]];\n      } else if (this.direction === \"left\") {\n        currentHead = [this.head[0] - 25, this.head[1]];\n      } else if (this.direction === \"up\") {\n        currentHead = [this.head[0], this.head[1] - 25];\n      } else if (this.direction === \"down\") {\n        currentHead = [this.head[0], this.head[1] + 25];\n      }\n      this.head = currentHead;\n      this.segmentLocations = [currentHead].concat(this.segmentLocations);\n      if (!this.ateApple(apple)) {\n        this.segmentLocations.pop();\n      } else {\n        score.current = score.current + 1;\n      }\n      this.checkIfCrashed();\n    }\n  }\n  changeDirection(direction) {\n    this.direction = direction;\n  }\n}\nclass Apple {\n  constructor(location) {\n    this.x = location.x;\n    this.y = location.y;\n  }\n}\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: props.function,\n    className: `flex-none bg-${props.color} w-12 h-12 border rounded-sm shadow hover:shadow-none duration-200 cursor-grab`,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 7\n  }, this);\n};\n_c = Button;\nconst gameContainer = new GameContainer(400, 400);\nconst snake = new Snake();\nconst apple = new Apple({\n  x: 100,\n  y: 100\n});\nconst Game = _ref => {\n  _s();\n  let {\n    gameContainer,\n    snake,\n    apple\n  } = _ref;\n  const canvasRef = useRef(null);\n  const score = useRef(0);\n  const updateGameState = (gameContainer, snake, apple, ctx, score) => {\n    // Update gameContainer\n    gameContainer.update(snake, apple, score);\n    if (!gameContainer.wallCollision && !snake.crashed && !gameContainer.pause) {\n      // Draw Game Container\n      ctx.clearRect(0, 0, gameContainer.width, gameContainer.height);\n      ctx.fillStyle = '#134e4a';\n      ctx.fillRect(0, 0, gameContainer.x, gameContainer.y);\n      // Draw Snake\n      ctx.fillStyle = '#16a34a';\n      ctx.strokeStyle = '#064e3b';\n      for (let index = 0; index < snake.segmentLocations.length; index++) {\n        const segment = snake.segmentLocations[index];\n        ctx.fillRect(segment[0], segment[1], 25, 25);\n        ctx.strokeRect(segment[0], segment[1], 25, 25);\n      }\n      // Draw Apple\n      ctx.fillStyle = '#dc2626';\n      ctx.strokeStyle = \"#7f1d1d\";\n      ctx.fillRect(apple.x, apple.y, 25, 25);\n      ctx.strokeRect(apple.x, apple.y, 25, 25);\n      // Draw Score\n      ctx.fillStyle = '#1e293b';\n      ctx.font = \"30px Arial\";\n      ctx.fillText(` ${score.current}`, 2, 32);\n    } else if (gameContainer.wallCollision) {}\n  };\n  const controller = event => {\n    switch (event.code) {\n      case \"ArrowRight\":\n        snake.changeDirection(\"right\");\n        break;\n      case \"ArrowLeft\":\n        snake.changeDirection(\"left\");\n        break;\n      case \"ArrowUp\":\n        snake.changeDirection(\"up\");\n        break;\n      case \"ArrowDown\":\n        snake.changeDirection(\"down\");\n        break;\n      default:\n        break;\n    }\n    switch (event.keyCode) {\n      case 32:\n        gameContainer.stop();\n        break;\n      case 13:\n        gameContainer.start();\n        break;\n      default:\n        break;\n    }\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const scale = window.devicePixelRatio;\n    const size = 400;\n    canvas.width = Math.floor(size * scale);\n    canvas.height = Math.floor(size * scale);\n    ctx.scale(scale, scale);\n    let gameState = setInterval(() => {\n      updateGameState(gameContainer, snake, apple, ctx, score);\n    }, 150);\n    window.addEventListener('keydown', controller);\n    return () => {\n      clearInterval(gameState);\n      window.removeEventListener('keydown', controller);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-screen h-screen py-7 bg-slate-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center gap-y-12 justify-center h-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        className: 'border shadow bg-white  w-5/6 sm:w-1/3',\n        id: \"myCanvas\",\n        ref: canvasRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-row gap-x-16\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-slate-700 flex flex-col gap-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-row gap-x-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-none w-12 h-12\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"white\",\n              function: () => snake.changeDirection(\"up\"),\n              children: /*#__PURE__*/_jsxDEV(ChevronUpIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 88\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-12 h-12 flex-none\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-row gap-x-1\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"white\",\n              function: () => snake.changeDirection(\"left\"),\n              children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 90\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-none w-12 h-12\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                color: \"white\",\n                function: () => snake.changeDirection(\"down\"),\n                children: /*#__PURE__*/_jsxDEV(ChevronDownIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 92\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"white\",\n              function: () => snake.changeDirection(\"right\"),\n              children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 91\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-slate-700 flex flex-row gap-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => gameContainer.start(),\n            className: \"bg-white w-12 grid content-center justify-center h-12 border rounded-sm shadow hover:shadow-none duration-200 cursor-grab p-2\",\n            children: /*#__PURE__*/_jsxDEV(PlayIcon, {\n              width: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => gameContainer.stop(),\n            className: \"bg-white w-12 h-12 border rounded-sm shadow hover:shadow-none duration-200 cursor-grab p-1 flex flex-row justify-center align-middle content-center\",\n            children: /*#__PURE__*/_jsxDEV(PauseIcon, {\n              width: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 7\n  }, this);\n};\n_s(Game, \"lBm1jMHP8TG27WqFwXiijRlROnE=\");\n_c2 = Game;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Game, {\n      gameContainer: gameContainer,\n      snake: snake,\n      apple: apple\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Game\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","_","ChevronUpIcon","ChevronDownIcon","ChevronLeftIcon","ChevronRightIcon","PlayIcon","PauseIcon","ArrowPathIcon","PlayPauseIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","randomXY","snake","gameContainerWidth","gameContainerHeight","goodSpot","randX","clamp","random","randY","segmentLocations","forEach","segment","isEqual","GameContainer","constructor","width","height","wallCollision","pause","update","apple","score","setScore","resetSnake","current","crashed","stop","start","Snake","head","direction","ateApple","didEatApple","x","y","checkIfCrashed","slice","currentHead","concat","pop","changeDirection","Apple","location","Button","props","onClick","function","className","color","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","gameContainer","Game","_ref","_s","canvasRef","updateGameState","ctx","clearRect","fillStyle","fillRect","strokeStyle","index","length","strokeRect","font","fillText","controller","event","code","keyCode","canvas","getContext","scale","window","devicePixelRatio","size","Math","floor","gameState","setInterval","addEventListener","clearInterval","removeEventListener","id","ref","_c2","App","_c3","$RefreshReg$"],"sources":["/Users/patrickwellins/Desktop/Snake-Type-Game/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport _ from 'lodash';\nimport {\n  ChevronUpIcon,\n  ChevronDownIcon,\n  ChevronLeftIcon,\n  ChevronRightIcon,\n    PlayIcon,\n    PauseIcon\n} from \"@heroicons/react/20/solid\";\n\nimport {ArrowPathIcon, PlayPauseIcon} from \"@heroicons/react/24/outline\";\nconst randomXY = (snake, gameContainerWidth, gameContainerHeight) => {\n\n  let goodSpot = true\n  const randX = _.clamp(_.random(gameContainerWidth / 25) * 25, 25, gameContainerHeight - 25)\n  const randY = _.clamp(_.random(gameContainerHeight / 25) * 25, 25, gameContainerHeight - 25)\n  snake.segmentLocations.forEach((segment) =>{\n    if (_.isEqual([randX, randY], segment)){\n      goodSpot = false\n    }})\n\n  return goodSpot? [randX, randY]: randomXY(snake, gameContainerWidth, gameContainerHeight)\n\n}\n\nclass GameContainer {\n\n  constructor(width, height){\n    this.width = width\n    this.height = height\n    this.wallCollision = false\n    this.pause = true\n  }\n\n  update(snake, apple, score, setScore){\n    // If the game is not Paused then update\n    if (!this.pause){\n      snake.update(apple, score, setScore)\n      // check of snake collided with wall\n      this.wallCollision = (snake.segmentLocations[0][0] >= this.width ||\n          snake.segmentLocations[0][0] < 0 ||\n          snake.segmentLocations[0][1] >= this.height ||\n          snake.segmentLocations[0][1] < 0)?  true: false\n\n      if (this.wallCollision){\n        snake.resetSnake()\n        score.current = 0\n        this.pause = true\n      }\n    }\n    if (snake.crashed){\n      snake.resetSnake()\n      score.current = 0\n      this.pause = true\n    }\n  }\n\n  stop(){\n    this.pause = true\n  }\n\n  start(){\n    this.pause = false\n  }\n\n}\n\nclass Snake {\n\n  constructor()\n  {\n    this.segmentLocations = [[50,50], [25,50], [0,50]]\n    this.head = this.segmentLocations[0]\n    this.direction = \"right\"\n    this.crashed = false\n  }\n\n  ateApple(apple){\n    const didEatApple = (this.head[0] === apple.x && this.head[1] === apple.y)\n    if(didEatApple){\n      const [x, y] = randomXY(snake, 400, 400)\n      apple.x = x\n      apple.y = y\n    }\n    return didEatApple\n\n  }\n\n  resetSnake(){\n    this.segmentLocations = [[50,50], [25,50], [0,50]]\n    this.head = this.segmentLocations[0]\n    this.direction = \"right\"\n    this.crashed = false\n  }\n\n  checkIfCrashed(){\n    this.segmentLocations.slice(1,).forEach((segment) =>{\n      if (_.isEqual(this.head, segment)){\n        this.crashed = true\n      }})\n  }\n\n  update(apple, score){\n\n    if (!this.crashed){\n      let currentHead\n      if (this.direction === \"right\"){\n        currentHead = [this.head[0] + 25, this.head[1]]\n      }\n      else if (this.direction === \"left\"){\n        currentHead = [this.head[0] - 25, this.head[1]]\n      }\n      else if (this.direction === \"up\"){\n        currentHead = [this.head[0], this.head[1] - 25]\n      }\n      else if (this.direction === \"down\"){\n        currentHead = [this.head[0], this.head[1] + 25]\n      }\n      this.head = currentHead\n      this.segmentLocations = [currentHead].concat(this.segmentLocations)\n\n\n      if (!this.ateApple(apple)){\n        this.segmentLocations.pop()\n      }\n      else{\n        score.current = score.current + 1\n      }\n      this.checkIfCrashed()\n    }\n\n  }\n  changeDirection(direction){\n    this.direction = direction\n  }\n}\n\nclass Apple {\n  constructor(location)\n  {\n    this.x = location.x\n    this.y = location.y\n  }\n}\n\nconst Button = (props) => {\n  return(\n      <div\n          onClick={props.function}\n           className={`flex-none bg-${props.color} w-12 h-12 border rounded-sm shadow hover:shadow-none duration-200 cursor-grab`}>\n\n        {props.children}\n      </div>\n  )\n}\n\nconst gameContainer = new GameContainer(400, 400)\nconst snake = new Snake()\nconst apple = new Apple({x:100, y:100})\n\nconst Game = ({gameContainer, snake, apple}) => {\n\n  const canvasRef = useRef(null)\n  const score = useRef(0)\n  const updateGameState = (gameContainer, snake, apple, ctx, score) => {\n\n    // Update gameContainer\n    gameContainer.update(snake, apple, score)\n    if (!gameContainer.wallCollision && !snake.crashed && !gameContainer.pause){\n      // Draw Game Container\n      ctx.clearRect(0,0, gameContainer.width, gameContainer.height)\n      ctx.fillStyle = '#134e4a';\n      ctx.fillRect(0, 0, gameContainer.x, gameContainer.y)\n      // Draw Snake\n      ctx.fillStyle = '#16a34a';\n      ctx.strokeStyle = '#064e3b'\n      for (let index = 0; index < snake.segmentLocations.length; index++) {\n        const segment = snake.segmentLocations[index]\n        ctx.fillRect(segment[0], segment[1], 25, 25);\n        ctx.strokeRect(segment[0], segment[1], 25, 25)\n      }\n      // Draw Apple\n      ctx.fillStyle = '#dc2626';\n      ctx.strokeStyle = \"#7f1d1d\"\n      ctx.fillRect(apple.x, apple.y, 25, 25)\n      ctx.strokeRect(apple.x, apple.y, 25, 25)\n      // Draw Score\n      ctx.fillStyle = '#1e293b';\n      ctx.font = \"30px Arial\";\n      ctx.fillText(` ${score.current}`, 2, 32);\n    }\n    else if (gameContainer.wallCollision){\n\n    }\n\n  }\n\n  const controller = (event) => {\n\n    switch (event.code) {\n      case \"ArrowRight\":\n        snake.changeDirection(\"right\")\n        break\n      case \"ArrowLeft\":\n        snake.changeDirection(\"left\")\n        break\n      case \"ArrowUp\":\n        snake.changeDirection(\"up\")\n        break\n      case \"ArrowDown\":\n        snake.changeDirection(\"down\")\n        break\n      default:\n        break;\n    }\n    switch (event.keyCode ) {\n      case 32:\n        gameContainer.stop()\n        break\n      case 13:\n        gameContainer.start()\n        break\n      default:\n        break;\n    }\n  }\n\n  useEffect(() => {\n\n    const canvas = canvasRef.current\n    const ctx = canvas.getContext(\"2d\");\n    const scale = window.devicePixelRatio;\n    const size = 400\n    canvas.width = Math.floor(size * scale);\n    canvas.height = Math.floor(size * scale);\n    ctx.scale(scale, scale);\n\n    let gameState = setInterval(() => {updateGameState(gameContainer, snake, apple, ctx, score);}, 150)\n    window.addEventListener('keydown', controller);\n\n    return () => {\n      clearInterval(gameState)\n      window.removeEventListener('keydown', controller);\n    }\n  })\n  return(\n      <div className={\"w-screen h-screen py-7 bg-slate-100\"}>\n        <div className={\"flex flex-col items-center gap-y-12 justify-center h-full\"}>\n          <canvas\n              className={'border shadow bg-white  w-5/6 sm:w-1/3'}\n              id=\"myCanvas\"\n              ref={canvasRef}>\n          </canvas>\n          <div className={\"flex flex-row gap-x-16\"} >\n            <div className=\"text-slate-700 flex flex-col gap-1\">\n              <div className={\"flex flex-row gap-x-1\"} >\n                <div className={\"flex-none w-12 h-12\"}></div>\n\n                <Button color={\"white\"} function={() => snake.changeDirection(\"up\")} >{<ChevronUpIcon/>}</Button>\n                {/*<div className={\"w-10 h-10 flex-none\"}></div>*/}\n\n                <div className={\"w-12 h-12 flex-none\"}></div>\n              </div>\n              <div className={\"flex flex-row gap-x-1\"} >\n                <Button color={\"white\"} function={() => snake.changeDirection(\"left\")} >{<ChevronLeftIcon/>}</Button>\n                <div className={\"flex-none w-12 h-12\"}>\n                  <Button color={\"white\"} function={() => snake.changeDirection(\"down\")} >{<ChevronDownIcon/>}</Button>\n                </div>\n                <Button color={\"white\"} function={() => snake.changeDirection(\"right\")} >{<ChevronRightIcon/>}</Button>\n              </div>\n\n            </div>\n\n            <div className=\"text-slate-700 flex flex-row gap-1\">\n              <div\n                  onClick={() => gameContainer.start()}\n                  className={\"bg-white w-12 grid content-center justify-center h-12 border rounded-sm shadow hover:shadow-none duration-200 cursor-grab p-2\"}>\n                <PlayIcon width={20} /></div>\n              <div\n                  onClick={() => gameContainer.stop()}\n                  className={\"bg-white w-12 h-12 border rounded-sm shadow hover:shadow-none duration-200 cursor-grab p-1 flex flex-row justify-center align-middle content-center\"}>\n                <PauseIcon width={20} />\n              </div>\n            </div>\n          </div>\n        </div>\n\n\n\n\n\n\n        {/*<table >*/}\n        {/*  <tr>*/}\n        {/*    <th>Command</th>*/}\n        {/*    <th>Key</th>*/}\n        {/*  </tr>*/}\n        {/*  <tr>*/}\n        {/*    <td>Stop</td>*/}\n        {/*    <td>Space Bar</td>*/}\n        {/*  </tr>*/}\n        {/*  <tr>*/}\n        {/*    <td>Continue</td>*/}\n        {/*    <td>Enter</td>*/}\n        {/*  </tr>*/}\n        {/*  <tr>*/}\n        {/*    <td>Left</td>*/}\n        {/*    <td>Left Arrow</td>*/}\n        {/*  </tr>*/}\n        {/*  <tr>*/}\n        {/*    <td>Right</td>*/}\n        {/*    <td>Right Arrow</td>*/}\n        {/*  </tr>*/}\n        {/*  <tr>*/}\n        {/*    <td>Up</td>*/}\n        {/*    <td>Up Arrow</td>*/}\n        {/*  </tr>*/}\n        {/*  <tr>*/}\n        {/*    <td>Down</td>*/}\n        {/*    <td>Down Arrow</td>*/}\n        {/*  </tr>*/}\n        {/*</table>*/}\n\n        {/*<div*/}\n        {/*    onClick={() => window.location.reload()}*/}\n        {/*    >*/}\n        {/*  <div*/}\n        {/*      className={\"border m-10 cursor-grab text-lg\"}*/}\n\n        {/*  > New Game*/}\n        {/*  </div>*/}\n        {/*</div>*/}\n      </div>\n  )\n}\n\nfunction App() {\n  return (\n    <>\n      <Game gameContainer={gameContainer} snake={snake} apple={apple}/>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}